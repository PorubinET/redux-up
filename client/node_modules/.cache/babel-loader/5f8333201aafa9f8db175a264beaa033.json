{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/Redux/Projects/redux-app-main-copy/client/src/components/taskItem/taskItem.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { inputDelete, updateText, checkUpdate } from \"../../redux/actions\";\nimport './taskItem.css';\nimport DateMomentUtils from '@date-io/moment'; // choose your lib\n\nimport { // DatePicker,\n// TimePicker,\nDateTimePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TaskItem(props) {\n  _s();\n\n  let [mode, setMode] = useState(false);\n  let [btn, setBtn] = useState(false);\n  const [selectedDate, handleDateChange] = useState(new Date().setHours(24));\n  const [input, setInput] = useState('');\n  const {\n    text,\n    _id,\n    done\n  } = props;\n  const dispatch = useDispatch(); // удаляем таску\n\n  const handleDelete = async e => {\n    e.preventDefault();\n    dispatch(inputDelete(_id));\n  }; // ввод инпута\n\n\n  const handleInput = e => {\n    setInput(e.target.value = e.target.value.replace(/ +/g, ' '));\n  }; // обновление чека и отправка на сервер\n\n\n  const handleCheck = e => {\n    e.preventDefault();\n\n    try {\n      dispatch(checkUpdate(_id, !done));\n    } catch (error) {\n      console.log(error);\n    }\n  }; // взаимодействие с css\n\n\n  const removeAttribute = e => {\n    e.currentTarget.removeAttribute(\"readonly\", \"true\");\n  };\n\n  const onBlur = e => {\n    e.preventDefault();\n    handleUpdateInput(e);\n    setMode(false);\n    e.currentTarget.classList.remove(\"to-do__text-active\");\n  };\n\n  const onFocus = e => {\n    handleUpdateInput(e);\n    e.currentTarget.classList.add(\"to-do__text-active\");\n  };\n\n  const addBtn = e => {\n    e.preventDefault();\n    setBtn(!btn);\n  };\n\n  const handleKeyDown = e => {\n    if (e.keyCode === 13) {\n      handleUpdateInput(e);\n      setMode(false);\n      e.currentTarget.setAttribute(\"readonly\", \"true\");\n      e.currentTarget.classList.remove(\"to-do__text-active\");\n    }\n  };\n\n  const modeUpdateTrue = e => {\n    e.preventDefault();\n    setMode(true);\n  };\n\n  const handleUpdateInput = async e => {\n    e.preventDefault();\n\n    if (!input || input === \" \") {\n      setInput(e.target.value = props.text);\n    } else {\n      try {\n        setInput(text);\n      } catch (error) {\n        console.log(error);\n      }\n\n      dispatch(updateText(input, _id, done));\n    }\n  };\n\n  let classDone, classCheck, classActive, classBtn;\n\n  if (done) {\n    classDone = \"to-do__text to-do__done\";\n    classCheck = \"to-do__checkbox to-do__checkbox-actve\";\n    classActive = \"to-do__checkbox-check to-do__checkbox-check-active\";\n  } else {\n    classDone = \"to-do__text\";\n    classCheck = \"to-do__checkbox\";\n    classActive = \"to-do__checkbox-check\";\n  }\n\n  if (btn) {\n    classBtn = \"to-do__menu-wrapp active\";\n  } else {\n    classBtn = \"to-do__menu-wrapp\";\n  }\n\n  useEffect(() => {\n    if (text) {\n      setInput(text);\n    }\n  }, [text]);\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"to-do__list-li\",\n    children: [/*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n      utils: DateMomentUtils,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"to-do__Time to-do__material\",\n        children: /*#__PURE__*/_jsxDEV(DateTimePicker, {\n          value: selectedDate,\n          onChange: handleDateChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: classCheck,\n      htmlFor: \"checkItem\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"checkItem\",\n      className: \"to-do__checkbox-input\",\n      onClick: handleCheck,\n      type: \"checkbox\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: classActive,\n      src: \"/img/check.svg\",\n      alt: \"check\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"div\",\n      children: mode ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          autoFocus: true,\n          className: classDone,\n          onBlur: onBlur,\n          onFocus: onFocus,\n          onKeyDown: handleKeyDown,\n          onDoubleClick: removeAttribute,\n          onChange: handleInput,\n          defaultValue: text,\n          id: _id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 25\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          type: \"text\",\n          disabled: true,\n          className: classDone,\n          onDoubleClick: modeUpdateTrue,\n          id: _id,\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 25\n        }, this), btn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"to-do__task\",\n            type: \"text\",\n            required: true,\n            value: text,\n            onChange: handleChange,\n            placeholder: \"What needs to be done?\",\n            id: _id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 34\n          }, this)\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"to-do__checkbox-btn\",\n          onClick: handleDelete,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"to-do__checkbox-cross\",\n            src: \"/img/cross.svg\",\n            alt: \"delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"to-do__menu-add\",\n          onClick: addBtn,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"to-do__menu-img\",\n            src: \"/img/pencil.svg\",\n            width: 18,\n            height: 18\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"to-do__menu\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classBtn,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"to-do__menu-btn-wrapp\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"to-do__menu-brn\",\n                children: \"add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"to-do__menu-btn-wrapp\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"to-do__menu-brn\",\n                children: \"watch\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"to-do__menu-btn-wrapp\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"to-do__menu-brn\",\n                children: \"change\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TaskItem, \"01XNYltO41QkoBjeBZZ0j3qLn1E=\", false, function () {\n  return [useDispatch];\n});\n\n_c = TaskItem;\nexport default TaskItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskItem\");","map":{"version":3,"sources":["/home/user/Desktop/Redux/Projects/redux-app-main-copy/client/src/components/taskItem/taskItem.jsx"],"names":["useState","useEffect","useDispatch","inputDelete","updateText","checkUpdate","DateMomentUtils","DateTimePicker","MuiPickersUtilsProvider","TaskItem","props","mode","setMode","btn","setBtn","selectedDate","handleDateChange","Date","setHours","input","setInput","text","_id","done","dispatch","handleDelete","e","preventDefault","handleInput","target","value","replace","handleCheck","error","console","log","removeAttribute","currentTarget","onBlur","handleUpdateInput","classList","remove","onFocus","add","addBtn","handleKeyDown","keyCode","setAttribute","modeUpdateTrue","classDone","classCheck","classActive","classBtn","handleChange"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,EAAsBC,UAAtB,EAAkCC,WAAlC,QAAqD,qBAArD;AACA,OAAO,gBAAP;AAEA,OAAOC,eAAP,MAA4B,iBAA5B,C,CAA8C;;AAC9C,SACI;AACA;AACAC,cAHJ,EAIIC,uBAJJ,QAKO,sBALP;;;;AAQA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACrB,MAAI,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,KAAD,CAA9B;AACA,MAAI,CAACa,GAAD,EAAMC,MAAN,IAAgBd,QAAQ,CAAC,KAAD,CAA5B;AACA,QAAM,CAACe,YAAD,EAAeC,gBAAf,IAAmChB,QAAQ,CAAC,IAAIiB,IAAJ,GAAWC,QAAX,CAAoB,EAApB,CAAD,CAAjD;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBpB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAEqB,IAAAA,IAAF;AAAQC,IAAAA,GAAR;AAAaC,IAAAA;AAAb,MAAsBb,KAA5B;AACA,QAAMc,QAAQ,GAAGtB,WAAW,EAA5B,CANqB,CAQrB;;AACA,QAAMuB,YAAY,GAAG,MAAOC,CAAP,IAAa;AAC9BA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,QAAQ,CAACrB,WAAW,CAACmB,GAAD,CAAZ,CAAR;AACH,GAHD,CATqB,CAcrB;;;AACA,QAAMM,WAAW,GAAIF,CAAD,IAAO;AAAEN,IAAAA,QAAQ,CAACM,CAAC,CAACG,MAAF,CAASC,KAAT,GAAiBJ,CAAC,CAACG,MAAF,CAASC,KAAT,CAAeC,OAAf,CAAuB,KAAvB,EAA8B,GAA9B,CAAlB,CAAR;AAA+D,GAA5F,CAfqB,CAiBrB;;;AACA,QAAMC,WAAW,GAAIN,CAAD,IAAO;AACvBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI;AACAH,MAAAA,QAAQ,CAACnB,WAAW,CAACiB,GAAD,EAAM,CAACC,IAAP,CAAZ,CAAR;AACH,KAFD,CAEE,OAAOU,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,GAPD,CAlBqB,CA2BrB;;;AACA,QAAMG,eAAe,GAAIV,CAAD,IAAO;AAC3BA,IAAAA,CAAC,CAACW,aAAF,CAAgBD,eAAhB,CAAgC,UAAhC,EAA4C,MAA5C;AACH,GAFD;;AAGA,QAAME,MAAM,GAAIZ,CAAD,IAAO;AAClBA,IAAAA,CAAC,CAACC,cAAF;AACAY,IAAAA,iBAAiB,CAACb,CAAD,CAAjB;AACAd,IAAAA,OAAO,CAAC,KAAD,CAAP;AACAc,IAAAA,CAAC,CAACW,aAAF,CAAgBG,SAAhB,CAA0BC,MAA1B,CAAiC,oBAAjC;AACH,GALD;;AAMA,QAAMC,OAAO,GAAIhB,CAAD,IAAO;AACnBa,IAAAA,iBAAiB,CAACb,CAAD,CAAjB;AACAA,IAAAA,CAAC,CAACW,aAAF,CAAgBG,SAAhB,CAA0BG,GAA1B,CAA8B,oBAA9B;AACH,GAHD;;AAKA,QAAMC,MAAM,GAAIlB,CAAD,IAAO;AAClBA,IAAAA,CAAC,CAACC,cAAF;AACAb,IAAAA,MAAM,CAAC,CAACD,GAAF,CAAN;AACH,GAHD;;AAKA,QAAMgC,aAAa,GAAInB,CAAD,IAAO;AACzB,QAAIA,CAAC,CAACoB,OAAF,KAAc,EAAlB,EAAsB;AAClBP,MAAAA,iBAAiB,CAACb,CAAD,CAAjB;AACAd,MAAAA,OAAO,CAAC,KAAD,CAAP;AACAc,MAAAA,CAAC,CAACW,aAAF,CAAgBU,YAAhB,CAA6B,UAA7B,EAAyC,MAAzC;AACArB,MAAAA,CAAC,CAACW,aAAF,CAAgBG,SAAhB,CAA0BC,MAA1B,CAAiC,oBAAjC;AACH;AACJ,GAPD;;AAQA,QAAMO,cAAc,GAAItB,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACAf,IAAAA,OAAO,CAAC,IAAD,CAAP;AACH,GAHD;;AAKA,QAAM2B,iBAAiB,GAAG,MAAOb,CAAP,IAAa;AACnCA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI,CAACR,KAAD,IAAUA,KAAK,KAAK,GAAxB,EAA6B;AACzBC,MAAAA,QAAQ,CAACM,CAAC,CAACG,MAAF,CAASC,KAAT,GAAiBpB,KAAK,CAACW,IAAxB,CAAR;AACH,KAFD,MAGK;AACD,UAAI;AACAD,QAAAA,QAAQ,CAACC,IAAD,CAAR;AACH,OAFD,CAEE,OAAOY,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;;AACDT,MAAAA,QAAQ,CAACpB,UAAU,CAACe,KAAD,EAAQG,GAAR,EAAaC,IAAb,CAAX,CAAR;AACH;AACJ,GAbD;;AAeA,MAAI0B,SAAJ,EAAeC,UAAf,EAA2BC,WAA3B,EAAwCC,QAAxC;;AACA,MAAI7B,IAAJ,EAAU;AACN0B,IAAAA,SAAS,GAAG,yBAAZ;AACAC,IAAAA,UAAU,GAAG,uCAAb;AACAC,IAAAA,WAAW,GAAG,oDAAd;AACH,GAJD,MAIO;AACHF,IAAAA,SAAS,GAAG,aAAZ;AACAC,IAAAA,UAAU,GAAG,iBAAb;AACAC,IAAAA,WAAW,GAAG,uBAAd;AACH;;AAGD,MAAItC,GAAJ,EAAS;AACLuC,IAAAA,QAAQ,GAAG,0BAAX;AACH,GAFD,MAEO;AACHA,IAAAA,QAAQ,GAAG,mBAAX;AACH;;AAEDnD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIoB,IAAJ,EAAU;AACND,MAAAA,QAAQ,CAACC,IAAD,CAAR;AACH;AACJ,GAJQ,EAIN,CAACA,IAAD,CAJM,CAAT;AAKA,sBACI;AAAI,IAAA,SAAS,EAAC,gBAAd;AAAA,4BACI,QAAC,uBAAD;AAAyB,MAAA,KAAK,EAAEf,eAAhC;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,6BAAf;AAAA,+BACI,QAAC,cAAD;AAAgB,UAAA,KAAK,EAAES,YAAvB;AAAqC,UAAA,QAAQ,EAAEC;AAA/C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AACI,MAAA,SAAS,EAAEkC,UADf;AAEI,MAAA,OAAO,EAAC;AAFZ;AAAA;AAAA;AAAA;AAAA,YANJ,eAUI;AACI,MAAA,EAAE,EAAC,WADP;AAEI,MAAA,SAAS,EAAC,uBAFd;AAGI,MAAA,OAAO,EAAElB,WAHb;AAII,MAAA,IAAI,EAAC;AAJT;AAAA;AAAA;AAAA;AAAA,YAVJ,eAgBI;AACI,MAAA,SAAS,EAAEmB,WADf;AAEI,MAAA,GAAG,EAAC,gBAFR;AAGI,MAAA,GAAG,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,YAhBJ,eAqBI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,gBACKxC,IAAI,gBACD;AAAA,+BACI;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,SAAS,MAFb;AAGI,UAAA,SAAS,EAAEsC,SAHf;AAII,UAAA,MAAM,EAAEX,MAJZ;AAKI,UAAA,OAAO,EAAEI,OALb;AAMI,UAAA,SAAS,EAAEG,aANf;AAOI,UAAA,aAAa,EAAET,eAPnB;AAQI,UAAA,QAAQ,EAAER,WARd;AASI,UAAA,YAAY,EAAEP,IATlB;AAUI,UAAA,EAAE,EAAEC;AAVR;AAAA;AAAA;AAAA;AAAA;AADJ,uBADC,gBAgBD;AAAA,gCACI;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,QAAQ,MAFZ;AAGI,UAAA,SAAS,EAAE2B,SAHf;AAII,UAAA,aAAa,EAAED,cAJnB;AAKI,UAAA,EAAE,EAAE1B,GALR;AAAA,oBAOKD;AAPL;AAAA;AAAA;AAAA;AAAA,gBADJ,EAUKR,GAAG,gBAAG;AAAA,iCAAE;AACL,YAAA,SAAS,EAAC,aADL;AAEL,YAAA,IAAI,EAAC,MAFA;AAGL,YAAA,QAAQ,EAAE,IAHL;AAIL,YAAA,KAAK,EAAEQ,IAJF;AAKL,YAAA,QAAQ,EAAEgC,YALL;AAML,YAAA,WAAW,EAAC,wBANP;AAOL,YAAA,EAAE,EAAE/B;AAPC;AAAA;AAAA;AAAA;AAAA;AAAF,yBAAH,gBAQI,qCAlBZ,eAmBI;AAAQ,UAAA,SAAS,EAAC,qBAAlB;AAAwC,UAAA,OAAO,EAAEG,YAAjD;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,uBAAf;AAAuC,YAAA,GAAG,EAAC,gBAA3C;AAA4D,YAAA,GAAG,EAAC;AAAhE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAnBJ,eAsBI;AAAQ,UAAA,SAAS,EAAC,iBAAlB;AAAoC,UAAA,OAAO,EAAEmB,MAA7C;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,iBAAf;AAAiC,YAAA,GAAG,EAAC,iBAArC;AAAsD,YAAA,KAAK,EAAE,EAA7D;AAAiE,YAAA,MAAM,EAAE;AAAzE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAtBJ,eAyBI;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,iCACI;AAAK,YAAA,SAAS,EAAEQ,QAAhB;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,uBAAf;AAAA,qCACI;AAAQ,gBAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII;AAAK,cAAA,SAAS,EAAC,uBAAf;AAAA,qCACI;AAAQ,gBAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAOI;AAAK,cAAA,SAAS,EAAC,uBAAf;AAAA,qCACI;AAAQ,gBAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAzBJ;AAAA;AAjBR;AAAA;AAAA;AAAA;AAAA,YArBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkFH;;GApLQ3C,Q;UAMYP,W;;;KANZO,Q;AAwLT,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { inputDelete, updateText, checkUpdate } from \"../../redux/actions\";\nimport './taskItem.css';\n\nimport DateMomentUtils from '@date-io/moment';// choose your lib\nimport {\n    // DatePicker,\n    // TimePicker,\n    DateTimePicker,\n    MuiPickersUtilsProvider,\n} from '@material-ui/pickers';\n\n\nfunction TaskItem(props) {\n    let [mode, setMode] = useState(false);\n    let [btn, setBtn] = useState(false);\n    const [selectedDate, handleDateChange] = useState(new Date().setHours(24));\n    const [input, setInput] = useState('')\n    const { text, _id, done } = props\n    const dispatch = useDispatch();\n\n    // удаляем таску\n    const handleDelete = async (e) => {\n        e.preventDefault();\n        dispatch(inputDelete(_id))\n    };\n\n    // ввод инпута\n    const handleInput = (e) => { setInput(e.target.value = e.target.value.replace(/ +/g, ' ')) }\n\n    // обновление чека и отправка на сервер\n    const handleCheck = (e) => {\n        e.preventDefault();\n        try {\n            dispatch(checkUpdate(_id, !done));\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    // взаимодействие с css\n    const removeAttribute = (e) => {\n        e.currentTarget.removeAttribute(\"readonly\", \"true\")\n    }\n    const onBlur = (e) => {\n        e.preventDefault();\n        handleUpdateInput(e)\n        setMode(false)\n        e.currentTarget.classList.remove(\"to-do__text-active\")\n    }\n    const onFocus = (e) => {\n        handleUpdateInput(e)\n        e.currentTarget.classList.add(\"to-do__text-active\")\n    }\n\n    const addBtn = (e) => {\n        e.preventDefault();\n        setBtn(!btn)\n    }\n\n    const handleKeyDown = (e) => {\n        if (e.keyCode === 13) {\n            handleUpdateInput(e)\n            setMode(false)\n            e.currentTarget.setAttribute(\"readonly\", \"true\")\n            e.currentTarget.classList.remove(\"to-do__text-active\");\n        }\n    }\n    const modeUpdateTrue = (e) => {\n        e.preventDefault();\n        setMode(true)\n    }\n\n    const handleUpdateInput = async (e) => {\n        e.preventDefault();\n        if (!input || input === \" \") {\n            setInput(e.target.value = props.text);\n        }\n        else {\n            try {\n                setInput(text);\n            } catch (error) {\n                console.log(error);\n            }\n            dispatch(updateText(input, _id, done))\n        }\n    };\n\n    let classDone, classCheck, classActive, classBtn;\n    if (done) {\n        classDone = \"to-do__text to-do__done\";\n        classCheck = \"to-do__checkbox to-do__checkbox-actve\";\n        classActive = \"to-do__checkbox-check to-do__checkbox-check-active\";\n    } else {\n        classDone = \"to-do__text\";\n        classCheck = \"to-do__checkbox\";\n        classActive = \"to-do__checkbox-check\";\n    }\n\n\n    if (btn) {\n        classBtn = \"to-do__menu-wrapp active\"\n    } else {\n        classBtn = \"to-do__menu-wrapp\"\n    }\n\n    useEffect(() => {\n        if (text) {\n            setInput(text)\n        }\n    }, [text])\n    return (\n        <li className=\"to-do__list-li\">\n            <MuiPickersUtilsProvider utils={DateMomentUtils}>\n                <div className=\"to-do__Time to-do__material\">\n                    <DateTimePicker value={selectedDate} onChange={handleDateChange} />\n                </div>\n            </MuiPickersUtilsProvider>\n            <label\n                className={classCheck}\n                htmlFor=\"checkItem\">\n            </label>\n            <input\n                id=\"checkItem\"\n                className=\"to-do__checkbox-input\"\n                onClick={handleCheck}\n                type=\"checkbox\"\n            />\n            <img\n                className={classActive}\n                src=\"/img/check.svg\"\n                alt=\"check\"\n            />\n            <div className=\"div\">\n                {mode ?\n                    <>\n                        <input\n                            type=\"text\"\n                            autoFocus\n                            className={classDone}\n                            onBlur={onBlur}\n                            onFocus={onFocus}\n                            onKeyDown={handleKeyDown}\n                            onDoubleClick={removeAttribute}\n                            onChange={handleInput}\n                            defaultValue={text}\n                            id={_id}\n                        />\n                    </>\n                    :\n                    <>\n                        <div\n                            type=\"text\"\n                            disabled\n                            className={classDone}\n                            onDoubleClick={modeUpdateTrue}\n                            id={_id}\n                        >\n                            {text}\n                        </div>\n                        {btn ? <><input\n                            className=\"to-do__task\"\n                            type=\"text\"\n                            required={true}\n                            value={text}\n                            onChange={handleChange}\n                            placeholder=\"What needs to be done?\"\n                            id={_id}\n                        /></> : <></>}\n                        <button className=\"to-do__checkbox-btn\" onClick={handleDelete}>\n                            <img className=\"to-do__checkbox-cross\" src=\"/img/cross.svg\" alt=\"delete\" />\n                        </button>\n                        <button className=\"to-do__menu-add\" onClick={addBtn}>\n                            <img className=\"to-do__menu-img\" src=\"/img/pencil.svg\"width={18} height={18}/>\n                        </button>\n                        <div className=\"to-do__menu\">\n                            <div className={classBtn}>\n                                <div className=\"to-do__menu-btn-wrapp\">\n                                    <button className=\"to-do__menu-brn\">add</button>\n                                </div>\n                                <div className=\"to-do__menu-btn-wrapp\">\n                                    <button className=\"to-do__menu-brn\">watch</button>\n                                </div>\n                                <div className=\"to-do__menu-btn-wrapp\">\n                                    <button className=\"to-do__menu-brn\">change</button>\n                                </div>\n                            </div>\n                        </div>\n\n                    </>}\n            </div>\n        </li>\n    )\n}\n\n\n\nexport default TaskItem;\n"]},"metadata":{},"sourceType":"module"}