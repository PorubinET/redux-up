{"ast":null,"code":"import { LOAD_TASK, CREATE_TASK, FILTER_TASK, UPDATE_TEXT, DELETE_TASK, DELETE_TASK_ALL, COMPLETED_ALL_TASK, UPDATE_CHECK_TASK } from \"./types\";\nimport { getTasks, updateTasks, updateTask, updateCheck, deleteTask, deleteTaskAll } from \"../../src/services/taskServices\";\nexport function inputLoad() {\n  return async dispatch => {\n    try {\n      const response = await getTasks();\n      dispatch({\n        type: LOAD_TASK,\n        payload: response.data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\nexport function taskCreate(data) {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: CREATE_TASK,\n        payload: data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\nexport function filterUpdate(filt) {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: FILTER_TASK,\n        filt\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\nexport function updateText(text, _id, done) {\n  return async dispatch => {\n    try {\n      await updateTask(_id, {\n        text\n      });\n      dispatch({\n        type: UPDATE_TEXT,\n        payload: {\n          text,\n          _id,\n          done\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n} ///////////////////\n\nexport function updateDesc(_id, desc) {\n  return async dispatch => {\n    try {\n      await updateTask(_id, {\n        desc\n      });\n      dispatch({\n        type: UPDATE_TEXT,\n        payload: {\n          _id,\n          desc\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\nexport function checkUpdate(_id, done) {\n  console.log(_id, done, \"checkUpdate\");\n  return async dispatch => {\n    try {\n      await updateCheck(_id, done);\n      dispatch({\n        type: UPDATE_CHECK_TASK,\n        payload: {\n          _id,\n          done\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\nexport function inputDelete(_id) {\n  console.log(_id);\n  return async dispatch => {\n    try {\n      await deleteTask(_id);\n      dispatch({\n        type: DELETE_TASK,\n        _id\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\nexport function taskDeleteAll() {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: DELETE_TASK_ALL\n      });\n      await deleteTaskAll();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\nexport function completedAll(done) {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: COMPLETED_ALL_TASK,\n        done\n      });\n\n      if (done) {\n        await updateTasks({\n          done: false\n        });\n      } else {\n        await updateTasks({\n          done: true\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}","map":{"version":3,"sources":["/home/user/Desktop/Redux/Projects/redux-app-main-copy/client/src/redux/actions.js"],"names":["LOAD_TASK","CREATE_TASK","FILTER_TASK","UPDATE_TEXT","DELETE_TASK","DELETE_TASK_ALL","COMPLETED_ALL_TASK","UPDATE_CHECK_TASK","getTasks","updateTasks","updateTask","updateCheck","deleteTask","deleteTaskAll","inputLoad","dispatch","response","type","payload","data","error","console","log","taskCreate","filterUpdate","filt","updateText","text","_id","done","updateDesc","desc","checkUpdate","inputDelete","taskDeleteAll","completedAll"],"mappings":"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","sourcesContent":["import {\n    LOAD_TASK,\n    CREATE_TASK,\n    FILTER_TASK,\n    UPDATE_TEXT,\n    DELETE_TASK,\n    DELETE_TASK_ALL,\n    COMPLETED_ALL_TASK,\n    UPDATE_CHECK_TASK\n} from \"./types\";\n\nimport {\n    getTasks,\n    updateTasks,\n    updateTask,\n    updateCheck,\n    deleteTask,\n    deleteTaskAll\n} from \"../../src/services/taskServices\";\n\nexport function inputLoad() {\n    return async dispatch => {\n        try {\n            const response = await getTasks()\n                dispatch({\n                    type: LOAD_TASK,\n                    payload: response.data\n                });\n        } catch (error) {\n            console.log(error)\n        }        \n    }\n}\n\nexport function taskCreate(data) {\n    return async dispatch => {\n        try {\n            dispatch({\n                type: CREATE_TASK,\n                payload: data\n            }); \n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nexport function filterUpdate(filt){\n    return async dispatch => {    \n        try {\n            dispatch({\n                type: FILTER_TASK,\n                filt\n            });\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nexport function updateText(text, _id, done) {  \n    return async dispatch => {\n        try {\n            await updateTask(_id, { text })\n            dispatch({\n                type: UPDATE_TEXT,\n                payload: {text, _id, done}\n            });\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n///////////////////\nexport function updateDesc(_id, desc) {  \n    return async dispatch => {\n        try {\n            await updateTask(_id, { desc })\n            dispatch({\n                type: UPDATE_TEXT,\n                payload: {_id, desc}\n            });\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nexport function checkUpdate(_id, done) {\n    console.log(_id, done, \"checkUpdate\")\n    return async dispatch => {\n        try {\n            await updateCheck(_id, done)\n            dispatch({\n                type: UPDATE_CHECK_TASK,\n                payload: {_id, done}\n            });\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nexport function inputDelete(_id) {\n    console.log(_id)\n    return async dispatch => {\n        try {\n            await deleteTask(_id);\n            dispatch({\n                type: DELETE_TASK,\n                _id\n            });\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nexport function taskDeleteAll() {\n    return async dispatch => {    \n        try {\n            dispatch({\n                type: DELETE_TASK_ALL,\n            });\n            await deleteTaskAll();\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nexport function completedAll(done) {\n    return async dispatch => {    \n        try {\n            dispatch({\n                type: COMPLETED_ALL_TASK,\n                done\n            });\n            if(done){\n                await updateTasks({done: false});\n            }\n            else{\n                await updateTasks({done: true})\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}